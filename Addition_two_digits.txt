
section .data
    num1 db 25        ; First 8-bit number (in decimal)
    num2 db 47        ; Second 8-bit number (in decimal)
    result_msg db 'The result of addition is: ', 0
    newline db 10, 0   ; Newline character for formatting

section .bss
    sum resb 2         ; Reserve space for a 16-bit result (two ASCII characters)

section .text
    global _start

_start:
    ; Load the first number into AL register
    mov al, [num1]

    ; Add the second number to AL register
    add al, [num2]

    ; Use AAM to split the result into AH and AL
    aam

    ; Convert AH and AL to ASCII characters
    add ah, '0'
    add al, '0'

    ; Store the result in the sum variable
    mov [sum], ah
    mov [sum+1], al

    ; Display the result message
    mov eax, 4
    mov ebx, 1
    mov ecx, result_msg
    mov edx, 29
    int 0x80

    ; Display the result (sum)
    mov eax, 4
    mov ebx, 1
    mov ecx, sum
    mov edx, 2
    int 0x80

    ; Exit the program
    mov eax, 1
    mov ebx, 0
    int 0x80
